{"version":3,"file":"static/js/174.8bbcc650.chunk.js","mappings":"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","sources":["pages/EventMaker.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Inputs from \"../components/Inputs\";\nimport Date from \"../components/date\"\nimport { useDispatch, useSelector } from 'react-redux'\nimport { AddEventList } from \"../redux/actions/eventListActions\";\nimport \"jodit\";\nimport \"jodit/build/jodit.min.css\";\nimport JoditEditor from \"jodit-react\";\nimport { useTranslation } from 'react-i18next';\nconst copyStringToClipboard = function (str) {\n  var el = document.createElement(\"textarea\");\n  el.value = str;\n  el.setAttribute(\"readonly\", \"\");\n  el.style = { position: \"absolute\", left: \"-9999px\" };\n  document.body.appendChild(el);\n  el.select();\n  document.execCommand(\"copy\");\n  document.body.removeChild(el);\n};\n\nconst facilityMergeFields = [\n  \"FacilityNumber\",\n  \"FacilityName\",\n  \"Address\",\n  \"MapCategory\",\n  \"Latitude\",\n  \"Longitude\",\n  \"ReceivingPlant\",\n  \"TrunkLine\",\n  \"SiteElevation\"\n];\nconst inspectionMergeFields = [\n  \"InspectionCompleteDate\",\n  \"InspectionEventType\"\n];\nconst createOptionGroupElement = (mergeFields, optionGrouplabel) => {\n  let optionGroupElement = document.createElement(\"optgroup\");\n  optionGroupElement.setAttribute(\"label\", optionGrouplabel);\n  for (let index = 0; index < mergeFields.length; index++) {\n    let optionElement = document.createElement(\"option\");\n    optionElement.setAttribute(\"class\", \"merge-field-select-option\");\n    optionElement.setAttribute(\"value\", mergeFields[index]);\n    optionElement.text = mergeFields[index];\n    optionGroupElement.appendChild(optionElement);\n  }\n  return optionGroupElement;\n}\nconst buttons = [\n  \"undo\",\n  \"redo\",\n  \"|\",\n  \"bold\",\n  \"strikethrough\",\n  \"underline\",\n  \"italic\",\n  \"|\",\n  \"superscript\",\n  \"subscript\",\n  \"|\",\n  \"align\",\n  \"|\",\n  \"ul\",\n  \"ol\",\n  \"outdent\",\n  \"indent\",\n  \"|\",\n  \"font\",\n  \"fontsize\",\n  \"brush\",\n  \"paragraph\",\n  \"|\",\n  \"image\",\n  \"link\",\n  \"table\",\n  \"|\",\n  \"hr\",\n  \"eraser\",\n  \"copyformat\",\n  \"|\",\n  \"fullsize\",\n  \"selectall\",\n  \"print\",\n  \"|\",\n  \"source\",\n  \"|\",\n  {\n    name: \"insertMergeField\",\n    tooltip: \"Insert Merge Field\",\n    popup: (editor, current, self, close) => {\n      function onSelected(e) {\n        let mergeField = e.target.value;\n        if (mergeField) {\n          console.log(mergeField);\n          editor.selection.insertNode(\n            editor.create.inside.fromHTML(\"{{\" + mergeField + \"}}\")\n          );\n        }\n      }\n      let divElement = editor.create.div(\"merge-field-popup\");\n\n      let labelElement = document.createElement(\"label\");\n      labelElement.setAttribute(\"class\", \"merge-field-label\");\n      labelElement.text = 'Merge field: ';\n      divElement.appendChild(labelElement);\n\n      let selectElement = document.createElement(\"select\");\n      selectElement.setAttribute(\"class\", \"merge-field-select\");\n      selectElement.appendChild(createOptionGroupElement(facilityMergeFields, \"Facility\"));\n      selectElement.appendChild(createOptionGroupElement(inspectionMergeFields, \"Inspection\"));\n      selectElement.onchange = onSelected;\n      divElement.appendChild(selectElement);\n\n      console.log(divElement);\n      return divElement;\n    }\n  },\n  {\n    name: \"copyContent\",\n    tooltip: \"Copy HTML to Clipboard\",\n    exec: function (editor) {\n      let html = editor.value;\n      copyStringToClipboard(html);\n    }\n  }\n];\n\nconst editorConfig = {\n  readonly: false,\n  toolbar: true,\n  spellcheck: true,\n  language: \"auto\",\n  toolbarButtonSize: \"medium\",\n  toolbarAdaptive: false,\n  showCharsCounter: true,\n  showWordsCounter: true,\n  showXPathInStatusbar: false,\n  askBeforePasteHTML: true,\n  askBeforePasteFromWord: true,\n  //defaultActionOnPaste: \"insert_clear_html\",\n  buttons: buttons,\n  uploader: {\n    insertImageAsBase64URI: true\n  },\n  width: 1000,\n  height: 442\n};\n\nconst initialContent = `<p>TRY COPY CONTENT FROM A WORD AND PASTE HERE.</p>`\n\n\nexport default function EventListPage() {\n  const { t, i18n } = useTranslation();\n  const [form, setForm] = useState({})\n  const dispatch = useDispatch()\n  const errors = useSelector(state => state.errors)\n  const events = useSelector(state => state.events)\n  const [message, setMessage] = useState(\"\")\n  const [show, setShow] = useState(false)\n  \n  const onChangeHandler = (e) => {\n    setForm({\n      ...form,\n      [e.target.name]: e.target.value\n    })  \n  }\n  const onChangeHandler1= (e) => {\n    setForm({\n      ...form,\n      description: e\n    })  \n  }\n  const onChangeHandlerDate = (e) => {\n  setForm({\n    ...form,\n    date: e\n  })\n  }\n  const onSubmit = (e) => {\n    e.preventDefault();\n    dispatch(AddEventList(form, setShow, setMessage))\n  }\n  \n  return (\n    <div>\n      <form onSubmit={onSubmit}>\n        <Inputs name=\"title\" label={t(\"titre de l'événement\")} value={form && form.title ? form.title : \"\"} onChangeHandler={onChangeHandler} errors={errors.title} />\n        <Date name=\"date\" label={t(\"date de l'événement\")} value={form.date} onChangeHandler={onChangeHandlerDate} errors={errors.date} />\n        <div className=\"App\" style={{ maxWidth: editorConfig.width, margin: \"0 auto\" }}>\n          <JoditEditor\n            name=\"description\"\n            value={form.description||initialContent}\n            config={editorConfig}\n            onChange={onChangeHandler1}\n          />\n\n          <div>\n          {t(\"Contenu de l'événement :\")}\n            <span dangerouslySetInnerHTML={{ __html: form.description||initialContent }} />\n          </div>\n          <div className=\"d-flex justify-content-between\">\n            <button type=\"submit\" className=\"btn btn-outline-primary\">\n            {t('Update')} <i className=\"fa-solid fa-floppy-disk\"></i>\n            </button>\n          </div>\n        </div>\n        </form>\n    </div>\n  );\n}"],"names":["facilityMergeFields","inspectionMergeFields","createOptionGroupElement","mergeFields","optionGrouplabel","optionGroupElement","document","createElement","setAttribute","index","length","optionElement","text","appendChild","editorConfig","readonly","toolbar","spellcheck","language","toolbarButtonSize","toolbarAdaptive","showCharsCounter","showWordsCounter","showXPathInStatusbar","askBeforePasteHTML","askBeforePasteFromWord","buttons","name","tooltip","popup","editor","current","self","close","divElement","create","div","labelElement","selectElement","onchange","e","mergeField","target","value","console","log","selection","insertNode","inside","fromHTML","exec","str","el","style","position","left","body","select","execCommand","removeChild","copyStringToClipboard","uploader","insertImageAsBase64URI","width","height","initialContent","EventListPage","useTranslation","t","i18n","useState","form","setForm","dispatch","useDispatch","errors","useSelector","state","events","setMessage","setShow","onSubmit","preventDefault","AddEventList","label","title","onChangeHandler","date","className","maxWidth","margin","description","config","onChange","dangerouslySetInnerHTML","__html","type"],"sourceRoot":""}