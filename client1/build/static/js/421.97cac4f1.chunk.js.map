{"version":3,"file":"static/js/421.97cac4f1.chunk.js","mappings":"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","sources":["components/sliderjs.js","pages/EventMaker.js"],"sourcesContent":["import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Slider from '@mui/material/Slider';\n\nconst marks = [\n  {\n    value: 1,\n    label: 1,\n  },\n  {\n    value: 2,\n    label: 2,\n  },\n  {\n    value: 3,\n    label: 3,\n  },\n  {\n    value: 4,\n    label: 4,\n  },\n  {\n    value: 5,\n    label: 5,\n  },\n  {\n    value: 6,\n    label: 6,\n  },\n  {\n    value: 7,\n    label: 7,\n  },\n];\n\nfunction valuetext(value) {\n  return `${value}Â°C`;\n}\n\nexport default function DiscreteSliderLabel({onChangeHandler}) {\n  return (\n    <Box sx={{ width: 300 }}>\n      <Slider\n        aria-label=\"Always visible\"\n        defaultValue={1}\n        getAriaValueText={valuetext}\n        step={1}\n        min={1}\n        max={7}\n        marks={marks}\n        valueLabelDisplay=\"on\"\n        onChange={onChangeHandler}\n      />\n    </Box>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport Inputs from \"../components/Inputs\";\nimport Date from \"../components/date\"\nimport Slider from \"../components/sliderjs\"\nimport { useDispatch, useSelector } from 'react-redux'\nimport { AddEventList } from \"../redux/actions/eventListActions\";\nimport \"jodit\";\nimport \"jodit/build/jodit.min.css\";\nimport JoditEditor from \"jodit-react\";\nimport { useTranslation } from 'react-i18next';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nconst copyStringToClipboard = function (str) {\n  var el = document.createElement(\"textarea\");\n  el.value = str;\n  el.setAttribute(\"readonly\", \"\");\n  el.style = { position: \"absolute\", left: \"-9999px\" };\n  document.body.appendChild(el);\n  el.select();\n  document.execCommand(\"copy\");\n  document.body.removeChild(el);\n};\n\nconst facilityMergeFields = [\n  \"FacilityNumber\",\n  \"FacilityName\",\n  \"Address\",\n  \"MapCategory\",\n  \"Latitude\",\n  \"Longitude\",\n  \"ReceivingPlant\",\n  \"TrunkLine\",\n  \"SiteElevation\"\n];\nconst inspectionMergeFields = [\n  \"InspectionCompleteDate\",\n  \"InspectionEventType\"\n];\nconst createOptionGroupElement = (mergeFields, optionGrouplabel) => {\n  let optionGroupElement = document.createElement(\"optgroup\");\n  optionGroupElement.setAttribute(\"label\", optionGrouplabel);\n  for (let index = 0; index < mergeFields.length; index++) {\n    let optionElement = document.createElement(\"option\");\n    optionElement.setAttribute(\"class\", \"merge-field-select-option\");\n    optionElement.setAttribute(\"value\", mergeFields[index]);\n    optionElement.text = mergeFields[index];\n    optionGroupElement.appendChild(optionElement);\n  }\n  return optionGroupElement;\n}\nconst buttons = [\n  \"undo\",\n  \"redo\",\n  \"|\",\n  \"bold\",\n  \"strikethrough\",\n  \"underline\",\n  \"italic\",\n  \"|\",\n  \"superscript\",\n  \"subscript\",\n  \"|\",\n  \"align\",\n  \"|\",\n  \"ul\",\n  \"ol\",\n  \"outdent\",\n  \"indent\",\n  \"|\",\n  \"font\",\n  \"fontsize\",\n  \"brush\",\n  \"paragraph\",\n  \"|\",\n  \"image\",\n  \"link\",\n  \"table\",\n  \"|\",\n  \"hr\",\n  \"eraser\",\n  \"copyformat\",\n  \"|\",\n  \"fullsize\",\n  \"selectall\",\n  \"print\",\n  \"|\",\n  \"source\",\n  \"|\",\n  {\n    name: \"insertMergeField\",\n    tooltip: \"Insert Merge Field\",\n    popup: (editor, current, self, close) => {\n      function onSelected(e) {\n        let mergeField = e.target.value;\n        if (mergeField) {\n          console.log(mergeField);\n          editor.selection.insertNode(\n            editor.create.inside.fromHTML(\"{{\" + mergeField + \"}}\")\n          );\n        }\n      }\n      let divElement = editor.create.div(\"merge-field-popup\");\n\n      let labelElement = document.createElement(\"label\");\n      labelElement.setAttribute(\"class\", \"merge-field-label\");\n      labelElement.text = 'Merge field: ';\n      divElement.appendChild(labelElement);\n\n      let selectElement = document.createElement(\"select\");\n      selectElement.setAttribute(\"class\", \"merge-field-select\");\n      selectElement.appendChild(createOptionGroupElement(facilityMergeFields, \"Facility\"));\n      selectElement.appendChild(createOptionGroupElement(inspectionMergeFields, \"Inspection\"));\n      selectElement.onchange = onSelected;\n      divElement.appendChild(selectElement);\n\n      console.log(divElement);\n      return divElement;\n    }\n  },\n  {\n    name: \"copyContent\",\n    tooltip: \"Copy HTML to Clipboard\",\n    exec: function (editor) {\n      let html = editor.value;\n      copyStringToClipboard(html);\n    }\n  }\n];\n\nconst editorConfig = {\n  readonly: false,\n  toolbar: true,\n  spellcheck: true,\n  language: \"auto\",\n  toolbarButtonSize: \"medium\",\n  toolbarAdaptive: false,\n  showCharsCounter: true,\n  showWordsCounter: true,\n  showXPathInStatusbar: false,\n  askBeforePasteHTML: true,\n  askBeforePasteFromWord: true,\n  //defaultActionOnPaste: \"insert_clear_html\",\n  buttons: buttons,\n  uploader: {\n    insertImageAsBase64URI: true\n  },\n  width: 1000,\n  height: 442\n};\n\nconst initialContent = `<p>TRY COPY CONTENT FROM A WORD AND PASTE HERE.</p>`\n\n\nexport default function EventListPage() {\n  const { t, i18n } = useTranslation();\n  const [form, setForm] = useState({})\n  const dispatch = useDispatch()\n  const errors = useSelector(state => state.errors)\n  const events = useSelector(state => state.events)\n  const [message, setMessage] = useState(\"\")\n  const [show, setShow] = useState(false)\n  \n  const onChangeHandler = (e) => {\n    setForm({\n      ...form,\n      [e.target.name]: e.target.value\n    })  \n  }\n  const onChangeHandler1= (e) => {\n    setForm({\n      ...form,\n      description: e\n    })  \n  }\n  const onChangeHandlerDate = (e) => {\n  setForm({\n    ...form,\n    date: e\n  })\n  }\n  const onChangeHandlerDataSlide = (e) => {\n    console.log(e.target.value)\n    setForm({\n      ...form,\n      numbreDays: e.target.value\n    })\n  }\n  const notify = () => toast.success(message);\n  const onSubmit = async(e) => {\n    e.preventDefault();\n    await dispatch(AddEventList(form, setShow, setMessage))\n    \n  }\n  \n  useEffect(() => {\n   if(message!==\"\") notify();\n  },[message])\n  \n  return (\n    <div>\n   <ToastContainer />\n       <div className=\"alert alert-success\" role=\"alert\" style={{ display: show ? \"block\" : \"none\" }}>\n                    {message}\n                </div>\n      <form onSubmit={onSubmit}>\n        <Inputs name=\"title\" label={t(\"titre de l'Ã©vÃ©nement\")} value={form && form.title ? form.title : \"\"} onChangeHandler={onChangeHandler} errors={errors.title} />\n        <Date name=\"date\" label={t(\"date de l'Ã©vÃ©nement\")} value={form.date} onChangeHandler={onChangeHandlerDate} errors={errors.date} />\n        <Slider onChangeHandler={onChangeHandlerDataSlide} />\n        <div className=\"App\" style={{ maxWidth: editorConfig.width, margin: \"0 auto\" }}>\n          <JoditEditor\n            name=\"description\"\n            value={form.description||initialContent}\n            config={editorConfig}\n            onChange={onChangeHandler1}\n          />\n\n          <div>\n          {t(\"Contenu de l'Ã©vÃ©nement :\")}\n            <span dangerouslySetInnerHTML={{ __html: form.description||initialContent }} />\n          </div>\n          <div className=\"d-flex justify-content-between\">\n            <button type=\"submit\" className=\"btn btn-outline-primary\">\n            {t('Update')} <i className=\"fa-solid fa-floppy-disk\"></i>\n            </button>\n          </div>\n        </div>\n        </form>\n    </div>\n  );\n}"],"names":["marks","value","label","valuetext","DiscreteSliderLabel","onChangeHandler","Box","sx","width","Slider","defaultValue","getAriaValueText","step","min","max","valueLabelDisplay","onChange","facilityMergeFields","inspectionMergeFields","createOptionGroupElement","mergeFields","optionGrouplabel","optionGroupElement","document","createElement","setAttribute","index","length","optionElement","text","appendChild","editorConfig","readonly","toolbar","spellcheck","language","toolbarButtonSize","toolbarAdaptive","showCharsCounter","showWordsCounter","showXPathInStatusbar","askBeforePasteHTML","askBeforePasteFromWord","buttons","name","tooltip","popup","editor","current","self","close","divElement","create","div","labelElement","selectElement","onchange","e","mergeField","target","console","log","selection","insertNode","inside","fromHTML","exec","str","el","style","position","left","body","select","execCommand","removeChild","copyStringToClipboard","uploader","insertImageAsBase64URI","height","initialContent","EventListPage","t","i18n","useTranslation","form","setForm","useState","dispatch","useDispatch","errors","useSelector","state","message","setMessage","events","show","setShow","useEffect","toast","success","className","role","display","onSubmit","async","preventDefault","AddEventList","Inputs","title","date","numbreDays","maxWidth","margin","description","config","dangerouslySetInnerHTML","__html","type"],"sourceRoot":""}